#!/bin/bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

if [ -f $BUILD_DIR/stratos-debug ]; then
  ${BUILDPACK_DIR}/bin/debug $1 $2
fi

function show_time () {
  num=$1
  min=0
  sec=$num
  if ((num>59)); then
    ((sec=num%60))
    ((min=num/60))
  fi

  echo "-----> ${min}m ${sec}s"
}

START_TIME=`date +%s`

#export DEPS_DIR="$BUILD_DIR/.cloudfoundry"
#mkdir -p "$DEPS_DIR/0"
#mkdir -p "$BUILD_DIR/.profile.d"
#echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"

echo "Stratos UI Buildpack"
echo "-----> Stack ${CF_STACK}"

# Install go
source "$BUILDPACK_DIR/scripts/install_go.sh"

# Install glide
source "$BUILDPACK_DIR/scripts/install_glide.sh"

# Install nodejs
source "$BUILDPACK_DIR/scripts/install_nodejs.sh"

export PATH=$NodeDir/bin:$GoInstallDir/go/bin:$GlideDir:$PATH

echo "-----> Checking versions"
echo "---------> Node Version: `node --version`"
echo "---------> NPM Version: `npm --version`"
echo "---------> Go Version: `go version`"
echo "---------> Glide Version: `glide -v`"

# Store the node_modules in the cache folder via a symlink
if [ ! -d "$CACHE_DIR" ]; then
  echo "Cache directory [$CACHE_DIR] does not exist"
  mkdir -p "$CACHE_DIR"
else
  echo "Cache directory [$CACHE_DIR] exists"
fi

# Setup cache folders for npm and bower
if [ ! -d "$CACHE_DIR/npm_cache" ]; then
  mkdir -p "$CACHE_DIR/npm_cache"
fi

if [ ! -d "$CACHE_DIR/bower_cache" ]; then
  mkdir -p "$CACHE_DIR/bower_cache"
  mkdir -p "$CACHE_DIR/bower_cache/packages"
  mkdir -p "$CACHE_DIR/bower_cache/registry"
fi

npm config set cache $CACHE_DIR/npm_cache
export bower_storage__packages=$CACHE_DIR/bower_cache/packages
export bower_storage__registry=$CACHE_DIR/bower_cache/registry

echo "-----> Running stratos build compile [`date +%H:%M:%S`]"

ls -al $BUILD_DIR

# Build the console
$BUILD_DIR/deploy/cloud-foundry/build.sh $BUILD_DIR $CACHE_DIR

echo "Removing folders"
ls -al $BUILD_DIR

# Remove the node_modules and bower_components folders - only needed for build
if [ -d "$BUILD_DIR/node_modules" ]; then
  rm -rf $BUILD_DIR/node_modules
fi

if [ -d "$BUILD_DIR/bower_components" ]; then
  rm -rf $BUILD_DIR/bower_components
fi

echo "-----> Stratos UI build complete [`date +%H:%M:%S`]"
echo "-----> Build time:"
END_TIME=`date +%s`
show_time $(($END_TIME - $START_TIME))

